{"version":3,"sources":["DOMAIN.ts","components/Header/Header.tsx","components/Header/SignUp.tsx","components/Header/Login.tsx","components/Dashboard/AddBook/ModalAddBook.tsx","components/Dashboard/WorkSpace/ModalCard.tsx","components/Dashboard/EditBook/ModalEditBook.tsx","components/Modal.tsx","components/Dashboard/Sections/SidebarItem.tsx","components/Dashboard/AddBook/AddBook.tsx","components/Dashboard/Sections/AllSection.tsx","components/Dashboard/Sections/FindSection.tsx","components/Dashboard/Sections/Sections.tsx","components/Dashboard/WorkSpace/MiniCard.tsx","components/Dashboard/WorkSpace/WorkSpace.tsx","components/Dashboard/Dashboard.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["DOMAIN","Header","props","auth","isAuth","id","className","onClick","token","sessionStorage","getItem","fetch","method","mode","headers","setAuth","name","clear","then","response","ok","json","sectionName","prompt","sectionDesc","data","section_name","section_description","length","body","JSON","stringify","alert","document","location","reload","result","undefined","error","setModal","SignUp","useState","setName","email","setEmail","password","setPassword","passwordConfirm","setPasswordConfirm","alertMsg","setAlertMsg","action","onChange","event","target","value","type","placeholder","funcs","hideModal","func","username","setItem","access_token","signupUser","password_confirmation","setType","Login","rememberMe","loginUser","remember_me","check_file_size","a","Math","ceil","formatBytes","files","size","ModalAddBook","targetClass","defaultData","isRight","isRightClass","buttonOpen","setButtonOpen","bookName","setBookName","bookAuthor","setBookAuthor","bookDescription","setBookDescription","file","title","bookCover","setBookCover","bookPublished","setBookPublished","setSectionName","arr","sections","map","index","key","sectionsNameOnly","useEffect","accept","file_size","Number","isInteger","find","item","list","isOpen","hide","formData","FormData","append","querySelector","click","message","sendData","ModalCard","publish","book","book_published","src","book_cover","alt","book_name","book_author","book_description","section_id","removeBook","targetSection","client_id","classList","add","ModalEditBook","Modal","modalInfo","isHidden","style","overflow","hidden","payload","getBooks","section","setBooks","setSection","SidebarItem","first","PagToBegin","AddBook","AllSection","FindSection","findInfo","setFindInfo","author","setAuthor","checked","query","findBooks","Sections","setSections","setClientId","counter","setCounter","i","random","toString","setSectionsList","sidebarItems","currentSection","isEnd","booksLen","hide1","hide2","MiniCard","WorkSpace","hidePag","setHidePag","books","currentBooks","count","Dashboard","sectionsList","App","modal","setIsAdmin","setAdmin","isHiddenValue","typeValue","payloadValue","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.f1b84231.chunk.js","sourcesContent":["const DOMAIN = 'http://localhost';\n\nexport default DOMAIN;\n","import React from 'react';\nimport './style.css';\nimport DOMAIN from \"../../DOMAIN\";\nimport auth from \"../types/auth\";\n\ninterface Header {\n    setModal: { (): void },\n    auth: auth\n    setAuth: { (auth: auth): void },\n    setAdmin: { (value: boolean): void }\n}\n\nfunction addSection() {\n    fetch('http://localhost/api/checkAdminRights/', {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n            'X-Requested-With': 'XMLHttpRequest',\n            'Authorization': 'Bearer ' + sessionStorage.getItem('token'),\n        },\n    }).then(response => {\n        if (!response.ok) {\n            return response.json();\n        } else {\n            let sectionName = prompt('Enter the name of the new section', '');\n            let sectionDesc = prompt('Enter a description of the new section', '');\n            const data = {\n                section_name: sectionName,\n                section_description: sectionDesc\n            }\n            if (sectionName != null && sectionDesc != null && sectionName.length < 150 && sectionDesc.length < 500) {\n                fetch('http://localhost/api/addSection/', {\n                    method: 'POST',\n                    mode: 'cors',\n                    headers: {\n                        'Content-type': 'application/json',\n                        'X-Requested-With': 'XMLHttpRequest',\n                        'Authorization': 'Bearer ' + sessionStorage.getItem('token'),\n                    },\n                    body: JSON.stringify(data)\n\n                }).then(response => {\n                    if (!response.ok) {\n                        return response.json()\n                    } else {\n                        alert('section added!');\n                        document.location.reload();\n                    }\n                }).then(result => {\n                    if (result !== undefined) {\n                        alert(result.error);\n                    }\n                });\n            } else {\n                alert('Check input');\n            }\n\n        }\n    }).then(result => {\n        if (result !== undefined) {\n            alert(result.error);\n        }\n    })\n}\n\nfunction Header(props: Header) {\n    if (!props.auth.isAuth) {\n        return (\n            <div id={'header'}>\n                <div className={'header-button'}>\n                    <p onClick={() => {\n                        props.setModal()\n                    }}>LOGIN</p>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div id={'header'}>\n                <div className={'header-wrapper'}>\n                    <div className={'logout'} onClick={() => {\n                        let token: string | null = sessionStorage.getItem('token');\n                        // @ts-ignore\n                        fetch(DOMAIN + '/api/auth/logout', {\n                            method: 'GET',\n                            mode: 'cors',\n                            headers: {\n                                'Content-type': 'application/json',\n                                'X-Requested-With': 'XMLHttpRequest',\n                                'Authorization': 'Bearer ' + token\n                            },\n                        });\n                        props.setAuth({\n                            name: '',\n                            isAuth: false\n                        });\n                        sessionStorage.clear();\n                    }}>\n                        <p>LOGOUT</p>\n                    </div>\n                    <div className={'header-button-greeting'}>\n                        <p className=\"admin-question\" onClick={() => {\n                            addSection()\n                        }}>\n                            {props.auth.name}, do you want to add a new section?\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default Header;\n","import React, {useState} from 'react';\nimport DOMAIN from \"../../DOMAIN\";\nimport auth from \"../types/auth\";\n\ninterface SignUp {\n    setType: { (type: string): void },\n    hideModal: { (): void },\n    setAuth: { (username: auth): void }\n}\n\ninterface userData {\n    name: string,\n    email: string,\n    password: string,\n    password_confirmation: string\n}\n\nfunction signupUser(data: userData, setAlertMsg: any, hideModal: any, funcs: { (value: string): void }[],\n                    setAuth: { (auth: auth): void }) {\n    fetch(DOMAIN + '/api/auth/signup', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-type': 'application/json',\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        if (response.ok) {\n            setAlertMsg('');\n            for (let func of funcs) {\n                func('');\n            }\n            hideModal();\n        }\n        if (!response.ok) {\n            setAlertMsg('Check your credentials')\n        }\n        return response.json();\n    }).then(result => {\n        if (result.username != undefined) {\n            setAuth({\n                name: result.username,\n                isAuth: true\n            });\n            sessionStorage.setItem('name', result.username);\n            sessionStorage.setItem('email', data.email);\n            sessionStorage.setItem('token', result.access_token);\n        }\n    });\n}\n\nfunction SignUp(props: SignUp) {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [passwordConfirm, setPasswordConfirm] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [alertMsg, setAlertMsg] = useState('');\n    const [isOk, setIsOk] = useState('');\n    return (\n        <div>\n            <div className={'inputs'}>\n                <div className=\"alert-msg-wrapper\">\n                    <p className={'alert-msg'}>{alertMsg}</p>\n                </div>\n                <form action=\"\">\n                    <input onChange={(event) => {\n                        setName(event.target.value);\n                    }} className=\"input-field\" type=\"email\" placeholder=\"Name\" value={name}/>\n                    <input onChange={(event) => {\n                        setEmail(event.target.value);\n                    }} className=\"input-field\" type=\"email\" placeholder=\"E-Mail\" value={email}/>\n                    <input onChange={(event) => {\n                        setPassword(event.target.value);\n                    }} className=\"input-field\" type=\"password\" placeholder=\"Password\" value={password}/>\n                    <input onChange={(event) => {\n                        setPasswordConfirm(event.target.value);\n                    }} className=\"input-field\" type=\"password\" placeholder=\"Confirm password\"\n                           value={passwordConfirm}/>\n                </form>\n\n            </div>\n            <div className={'button-wrapper'}>\n                <div className=\"button\" onClick={() => {\n                    let data: userData = {\n                        name: name,\n                        email: email,\n                        password: password,\n                        password_confirmation: passwordConfirm\n                    };\n                    let funcs: { (value: string): void }[] = [setName, setEmail, setPassword, setPasswordConfirm]\n                    signupUser(data, setAlertMsg, props.hideModal, funcs, props.setAuth);\n                }}>Submit\n                </div>\n            </div>\n            <p className={'modal-link'} onClick={() => {\n                props.setType('login');\n            }}>LOGIN</p>\n            <div className={'modal-checkbox-wrapper'}>\n            </div>\n        </div>);\n}\n\nexport default SignUp;\n","import React, {useState} from 'react';\nimport DOMAIN from \"../../DOMAIN\";\nimport auth from \"../types/auth\";\n\ninterface Login {\n    setType: { (type: string): void },\n    hideModal: { (): void },\n    setAuth: { (username: auth): void }\n}\n\ninterface userData {\n    email: string,\n    password: string,\n    remember_me: boolean\n}\n\nfunction loginUser(data: userData, setAlertMsg: any, hideModal: any, setEmail: any, setPassword: any,\n                   setAuth: { (auth: auth): void }) {\n    fetch(DOMAIN + '/api/auth/login', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-type': 'application/json',\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        if (!response.ok) {\n            setAlertMsg('Check your credentials')\n        } else {\n            setAlertMsg('');\n            setEmail('');\n            setPassword('');\n            hideModal();\n        }\n        return response.json();\n    }).then(result => {\n        if (result.username != undefined) {\n            setAuth({\n                name: result.username,\n                isAuth: true\n            });\n            sessionStorage.setItem('name', result.username);\n            sessionStorage.setItem('email', data.email);\n            sessionStorage.setItem('token', result.access_token);\n        }\n    });\n}\n\n\nfunction Login(props: Login) {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [rememberMe, setRememberMe] = useState(false);\n    const [alertMsg, setAlertMsg] = useState('');\n    return (\n        <div>\n            <div className={'inputs'}>\n                <div className=\"alert-msg-wrapper\">\n                    <p className={'alert-msg'}>{alertMsg}</p>\n                </div>\n                <form action=\"\">\n                    <input onChange={(event) => {\n                        setEmail(event.target.value);\n                    }} className =\"input-field\" type=\"email\" placeholder=\"E-Mail\" value={email}/>\n                    <input onChange={(event) => {\n                        setPassword(event.target.value);\n                    }} className=\"input-field\" type=\"password\" placeholder=\"Password\" value={password}/>\n                </form>\n\n            </div>\n\n            <div className={'button-wrapper'}>\n                <div className=\"button\" onClick={() => {\n                    let data: userData = {\n                        email: email,\n                        password: password,\n                        remember_me: rememberMe,\n                    };\n                    loginUser(data, setAlertMsg, props.hideModal, setEmail, setPassword, props.setAuth);\n                }}>Submit\n                </div>\n            </div>\n            <p className={'modal-link'} onClick={() => {\n                props.setType('signup');\n            }}>SIGNUP</p>\n        </div>\n    );\n}\n\n\nexport default Login;\n","import React, {useEffect, useState} from 'react';\nimport DOMAIN from \"../../../DOMAIN\";\n\nfunction formatBytes(a: number) {\n    let result = a / 1024;\n    return Math.ceil(result);\n}\n\n\nfunction check_file_size(event: any) {\n    let file_size = event.target.files[0].size;\n    return formatBytes(file_size);\n}\n\nfunction sendData(bookName: string, bookAuthor: string, bookDescription: string, bookCover: any,\n                  bookPublished: string, sectionName: string, isOpen: boolean, hide: any) {\n    if (!isOpen) return;\n    let formData = new FormData();\n    const email: string | null = sessionStorage.getItem('email');\n    formData.append('bookName', bookName);\n    formData.append('bookAuthor', bookAuthor);\n    formData.append('bookDescription', bookDescription);\n    formData.append('bookCover', bookCover);\n    if (bookPublished !== '') {\n        formData.append('bookPublished', bookPublished);\n    }\n    formData.append('sectionName', sectionName);\n\n    // @ts-ignore\n    fetch(DOMAIN + '/api/addBook/', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Authorization': 'Bearer ' + sessionStorage.getItem('token'),\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: formData\n    }).then(response => {\n        if (!response.ok) {\n            return response.json();\n        } else {\n            // @ts-ignore\n            document.querySelector(\"#all-section-client\").click();\n            hide();\n        }\n    }).then(result => {\n        if (result != undefined) {\n            alert(result.message);\n        }\n    });\n}\n\nfunction ModalAddBook(props: any) {\n    const defaultData = {\n        value: '',\n        isRight: false,\n        isRightClass: 'wrong'\n    }\n    const [buttonOpen, setButtonOpen] = useState(false);\n    const [bookName, setBookName] = useState(defaultData);\n    const [bookAuthor, setBookAuthor] = useState(defaultData);\n    const [bookDescription, setBookDescription] = useState(defaultData);\n    const [bookCover, setBookCover] = useState({\n        value: 0,\n        file: null,\n        isRight: false,\n        isRightClass: 'file-not-uploaded',\n        title: 'Image not uploaded'\n\n    });\n    const [bookPublished, setBookPublished] = useState({\n        value: '',\n        isRight: true,\n        isRightClass: ''\n    });\n    const [sectionName, setSectionName] = useState(defaultData);\n    let arr = props.sections.map((value: string, index: number) => {\n        return <option key={index}>{value}</option>\n    })\n    let sectionsNameOnly = props.sections.map((value: string) => {\n        return {value}\n    })\n    useEffect(() => {\n        if (bookName.isRight && bookCover.isRight && bookAuthor.isRight &&\n            bookDescription.isRight && bookPublished.isRight && sectionName.isRight) {\n            setButtonOpen(true);\n        } else {\n            setButtonOpen(false);\n        }\n    }, [bookName.value, bookCover.value, bookAuthor.value, bookDescription.value, bookPublished.value, sectionName.value])\n    let targetClass: string;\n    if (!buttonOpen) {\n        targetClass = 'add-book-button-forbidden';\n    } else {\n        targetClass = 'add-book-button'\n    }\n\n    return (\n        <div className={'add-book-wrapper overflow-hidden'}>\n            <h3>Add book information</h3>\n            <div className={'add-book-inputs'}>\n                <input onChange={(event) => {\n                    setBookName({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length == 0 || event.target.value.length > 150\n                    ) {\n                        setBookName({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }\n                } className={\"add-book-input-field \" + bookName.isRightClass} placeholder=\"Book name\"/>\n                <input onChange={(event) => {\n                    setBookAuthor({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length == 0 || event.target.value.length > 100) {\n                        setBookAuthor({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }} className={\"add-book-input-field \" + bookAuthor.isRightClass} placeholder=\"Book author\"/>\n            </div>\n            <div className={'add-book-inputs'}>\n                    <textarea onChange={(event) => {\n                        setBookDescription({\n                            value: event.target.value,\n                            isRight: true,\n                            isRightClass: ''\n                        });\n                        if (event.target.value.length > 2000 || event.target.value.length == 0) {\n                            setBookDescription({\n                                value: event.target.value,\n                                isRight: false,\n                                isRightClass: 'wrong'\n                            })\n\n                        }\n                    }} className={\"add-book-textarea-field \" + bookDescription.isRightClass}\n                              placeholder=\"Book description\"/>\n            </div>\n            <div className={'add-book-file-upload'}>\n                <h4 className={\"add-book-file-upload-title \" + bookCover.isRightClass}>{bookCover.title}</h4>\n                <div className={\"add-book-file-upload-field\"}>\n                    <input placeholder=\"Book cover\"\n                           className=\"add-book-file-uploading\"\n                           type=\"file\"\n                           id=\"add-book-img\"\n                           accept=\"image/*\" onChange={(event) => {\n                        let file_size = check_file_size(event);\n                        if (file_size <= 500 && file_size > 0) {\n                            // @ts-ignore\n                            setBookCover({\n                                value: file_size,\n                                isRight: true,\n                                // @ts-ignore\n                                file: event.target.files[0],\n                                isRightClass: 'file-uploaded',\n                                title: 'Image uploaded'\n                            });\n                        } else {\n                            setBookCover({\n                                value: file_size,\n                                isRight: false,\n                                file: null,\n                                isRightClass: 'file-not-uploaded',\n                                title: 'Image too big'\n                            });\n                        }\n                    }}/>\n                </div>\n            </div>\n            <div className={'add-book-inputs'}>\n                <input onChange={(event) => {\n                    setBookPublished({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length > 4 || !Number.isInteger(Number(event.target.value))\n                        || Number(event.target.value) < 0) {\n                        setBookPublished({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }} className={\"add-book-input-field \" + bookPublished.isRightClass}\n                       placeholder=\"Book published (unnecessary)\"/>\n                <input onChange={(event) => {\n                    setSectionName({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length == 0 || event.target.value.length > 150\n                        || sectionsNameOnly.find((item: any) => {\n                            if (item.value == event.target.value) return true;\n                        }) == undefined) {\n                        setSectionName({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }} className={\"add-book-input-field \" + sectionName.isRightClass} placeholder=\"Section name\"\n                       list={'add-book-sections'}/>\n                <datalist id=\"add-book-sections\">\n                    {arr}\n                </datalist>\n            </div>\n            <div className=\"add-book-button-wrapper\">\n                <div className={targetClass}\n                     onClick={() => sendData(bookName.value, bookAuthor.value,\n                         bookDescription.value, bookCover.file, bookPublished.value, sectionName.value, buttonOpen, props.hide)}>\n                    Отправить\n                </div>\n            </div>\n        </div>);\n}\n\nexport default ModalAddBook;\n","import React from 'react';\nimport DOMAIN from \"../../../DOMAIN\";\n\ninterface ModalCard {\n    book: {\n        id: number,\n        book_name: string,\n        book_author: string,\n        book_description: string,\n        book_cover: string,\n        book_published: string,\n        section_name: string,\n        isAuth: boolean,\n        client_id: string,\n        targetSection: string,\n    },\n    hide: {\n        (): void\n    },\n    setModal: { (isHidden: boolean, type: string, payload: any): void }\n\n}\n\nfunction removeBook(id: number, section_id: string, hide: { (): void }) {\n    const data = {\n        id: id\n    };\n    fetch(DOMAIN + '/api/removeBook', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Authorization': 'Bearer ' + sessionStorage.getItem('token'),\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        return response.json()\n    }).then(result => {\n        if (result.error !== undefined) {\n            alert(result.error);\n        }\n        // @ts-ignore\n        document.querySelector(section_id).click();\n        hide();\n    });\n}\n\nfunction hideBook(client_id: string, hide: { (): void }) {\n    // @ts-ignore\n    document.querySelector('#' + client_id).classList.add('hide');\n    hide();\n}\n\n\nfunction ModalCard(props: ModalCard) {\n    let publish: any = '';\n    if (props.book.book_published === null) {\n        publish = <p>Not specified</p>\n    } else {\n        publish = <p>{props.book.book_published}</p>\n    }\n    let targetClass: string = 'hide';\n    if (props.book.isAuth) {\n        targetClass = '';\n    }\n    return (\n        <div className={'add-book-wrapper'}>\n            <div className={'card-img-wrapper'}>\n                <img src={DOMAIN + props.book.book_cover} alt=\"\"/>\n            </div>\n            <div className={'card-info'}>\n                <div className={'card-item'}>\n                    <h3>Name</h3>\n                    <p>{props.book.book_name}</p>\n                </div>\n                <div className={'card-item'}>\n                    <h3>Author</h3>\n                    <p>{props.book.book_author}</p>\n                </div>\n            </div>\n            <div className={'card-info'}>\n                <div className={'card-item'}>\n                    <h3>Published</h3>\n                    <p>{publish}</p>\n                </div>\n                <div className={'card-item'}>\n                    <h3>Section</h3>\n                    <p>{props.book.section_name}</p>\n                </div>\n            </div>\n            <div className={'card-desc'}>\n                <h3>Description</h3>\n                <p>{props.book.book_description}</p>\n            </div>\n            <div className={'card-info'}>\n                <div className={'card-button edit ' + targetClass} onClick={() => {\n                    props.setModal(false, 'editBook', props.book);\n                }}\n                >\n                    <p>Edit</p>\n                </div>\n                <div onClick={() => {\n                    removeBook(props.book.id, props.book.targetSection, props.hide)\n                }} className={'card-button remove ' + targetClass}>\n                    <p>Remove</p>\n                </div>\n                <div className={'card-button hide-btn ' + targetClass} onClick={() => {\n                    hideBook(props.book.client_id, props.hide)\n                }}>\n                    <p>Hide</p>\n                </div>\n            </div>\n\n        </div>);\n}\n\nexport default ModalCard;\n","import React, {useEffect, useState} from 'react';\nimport DOMAIN from \"../../../DOMAIN\";\n\nfunction formatBytes(a: number, b = 2) {\n    let result = a / 1024;\n    return Math.ceil(result);\n}\n\n\nfunction check_file_size(event: any) {\n    let file_size = event.target.files[0].size;\n    return formatBytes(file_size);\n}\n\nfunction sendData(id: string, bookName: string, bookAuthor: string, bookDescription: string, bookCover: any,\n                  bookPublished: string, sectionName: string, isOpen: boolean, hide: any) {\n    if (!isOpen) return;\n    let formData = new FormData();\n    const email: string | null = sessionStorage.getItem('email');\n    formData.append('id', id);\n    formData.append('bookName', bookName);\n    formData.append('bookAuthor', bookAuthor);\n    formData.append('bookDescription', bookDescription);\n    formData.append('bookCover', bookCover);\n    if (bookPublished !== '') {\n        formData.append('bookPublished', bookPublished);\n    }\n    formData.append('sectionName', sectionName);\n\n    // @ts-ignore\n    fetch(DOMAIN + '/api/editBook/', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Authorization': 'Bearer ' + sessionStorage.getItem('token'),\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: formData\n    }).then(response => {\n        if (!response.ok) {\n            return response.json();\n        } else {\n            // @ts-ignore\n            document.querySelector(\"#all-section-client\").click();\n            hide();\n        }\n    }).then(result => {\n        if (result != undefined) {\n            alert(result.error);\n        }\n    });\n}\n\nfunction ModalEditBook(props: any) {\n    const defaultData = {\n        value: '',\n        isRight: false,\n        isRightClass: 'wrong'\n    }\n    const [buttonOpen, setButtonOpen] = useState(true);\n    const [bookName, setBookName] = useState({\n        value: props.book.book_name,\n        isRight: true,\n        isRightClass: ''\n    });\n    const [bookAuthor, setBookAuthor] = useState({\n        value: props.book.book_author,\n        isRight: true,\n        isRightClass: ''\n    });\n    const [bookDescription, setBookDescription] = useState({\n        value: props.book.book_description,\n        isRight: true,\n        isRightClass: ''\n    });\n    const [bookCover, setBookCover] = useState({\n        value: 0,\n        file: null,\n        isRight: false,\n        isRightClass: 'file-not-uploaded',\n        title: 'Image not uploaded'\n\n    });\n    const [bookPublished, setBookPublished] = useState({\n        value: props.book.book_published,\n        isRight: true,\n        isRightClass: ''\n    });\n    const [sectionName, setSectionName] = useState({\n        value: props.book.section_name,\n        isRight: true,\n        isRightClass: ''\n    });\n    let arr = props.sections.map((value: string, index: number) => {\n        return <option key={index}>{value}</option>\n    })\n    let sectionsNameOnly = props.sections.map((value: string) => {\n        return {value}\n    })\n    useEffect(() => {\n        if (bookName.isRight && bookCover.isRight && bookAuthor.isRight &&\n            bookDescription.isRight && bookPublished.isRight && sectionName.isRight) {\n            setButtonOpen(true);\n        } else {\n            setButtonOpen(false);\n        }\n    }, [bookName.value, bookCover.value, bookAuthor.value, bookDescription.value, bookPublished.value, sectionName.value])\n    let targetClass: string;\n    if (!buttonOpen) {\n        targetClass = 'add-book-button-forbidden';\n    } else {\n        targetClass = 'add-book-button'\n    }\n\n    return (\n        <div className={'add-book-wrapper overflow-hidden'}>\n            <h3>Edit book information</h3>\n            <div className={'add-book-inputs'}>\n                <input value={bookName.value} onChange={(event) => {\n                    setBookName({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length == 0 || event.target.value.length > 150\n                    ) {\n                        setBookName({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }\n                } className={\"add-book-input-field \" + bookName.isRightClass} placeholder=\"Book name\"/>\n                <input value={bookAuthor.value} onChange={(event) => {\n                    setBookAuthor({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length == 0 || event.target.value.length > 100) {\n                        setBookAuthor({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }} className={\"add-book-input-field \" + bookAuthor.isRightClass} placeholder=\"Book author\"/>\n            </div>\n            <div className={'add-book-inputs'}>\n                    <textarea value={bookDescription.value} onChange={(event) => {\n                        setBookDescription({\n                            value: event.target.value,\n                            isRight: true,\n                            isRightClass: ''\n                        });\n                        if (event.target.value.length > 2000 || event.target.value.length == 0) {\n                            setBookDescription({\n                                value: event.target.value,\n                                isRight: false,\n                                isRightClass: 'wrong'\n                            })\n\n                        }\n                    }} className={\"add-book-textarea-field \" + bookDescription.isRightClass}\n                              placeholder=\"Book description\"/>\n            </div>\n            <div className={'add-book-file-upload'}>\n                <h4 className={\"add-book-file-upload-title \" + bookCover.isRightClass}>{bookCover.title}</h4>\n                {/*<label className={\"add-book-input-label\" + +bookCover.isRightClass} htmlFor=\"img\">Select image:</label>*/}\n                <div className={\"add-book-file-upload-field\"}>\n                    <input placeholder=\"Book cover\"\n                           className=\"add-book-file-uploading\"\n                           type=\"file\"\n                           id=\"add-book-img\"\n                           accept=\"image/*\" onChange={(event) => {\n                        let file_size = check_file_size(event);\n                        if (file_size <= 500 && file_size > 0) {\n                            // @ts-ignore\n                            setBookCover({\n                                value: file_size,\n                                isRight: true,\n                                // @ts-ignore\n                                file: event.target.files[0],\n                                isRightClass: 'file-uploaded',\n                                title: 'Image uploaded'\n                            });\n                        } else {\n                            setBookCover({\n                                value: file_size,\n                                isRight: false,\n                                file: null,\n                                isRightClass: 'file-not-uploaded',\n                                title: 'Image too big'\n                            });\n                        }\n                    }}/>\n                </div>\n            </div>\n            <div className={'add-book-inputs'}>\n                <input value={bookPublished.value} onChange={(event) => {\n                    setBookPublished({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length > 4 || !Number.isInteger(Number(event.target.value))\n                        || Number(event.target.value) < 0) {\n                        setBookPublished({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }} className={\"add-book-input-field \" + bookPublished.isRightClass}\n                       placeholder=\"Book published (unnecessary)\"/>\n                <input value={sectionName.value} onChange={(event) => {\n                    setSectionName({\n                        value: event.target.value,\n                        isRight: true,\n                        isRightClass: ''\n                    })\n                    if (event.target.value.length == 0 || event.target.value.length > 150\n                        || sectionsNameOnly.find((item: any) => {\n                            if (item.value == event.target.value) return true;\n                        }) == undefined) {\n                        setSectionName({\n                            value: event.target.value,\n                            isRight: false,\n                            isRightClass: 'wrong'\n                        })\n                    }\n                }} className={\"add-book-input-field \" + sectionName.isRightClass} placeholder=\"Section name\"\n                       list={'add-book-sections'}/>\n                <datalist id=\"add-book-sections\">\n                    {arr}\n                </datalist>\n            </div>\n            <div className=\"add-book-button-wrapper\">\n                <div className={targetClass}\n                     onClick={() => sendData(props.book.id, bookName.value, bookAuthor.value,\n                         bookDescription.value, bookCover.file, bookPublished.value, sectionName.value, buttonOpen, props.hide)}>\n                    Отправить\n                </div>\n            </div>\n        </div>);\n}\n\nexport default ModalEditBook;\n","import React, {useEffect} from 'react';\nimport SignUp from \"./Header/SignUp\";\nimport Login from \"./Header/Login\";\nimport auth from \"./types/auth\";\nimport modalPayload from \"./types/modalPayload\";\nimport ModalAddBook from \"./Dashboard/AddBook/ModalAddBook\";\nimport ModalCard from \"./Dashboard/WorkSpace/ModalCard\";\nimport ModalEditBook from \"./Dashboard/EditBook/ModalEditBook\";\n\n\ninterface Modal {\n    hideModal: { (): void },\n    setAuth: { (auth: auth): void },\n    modalInfo: modalPayload,\n    setModal: { (value1: boolean, value2: string, value3: any): void },\n}\n\nfunction Modal(props: Modal) {\n    let targetClass: string = '';\n    if (props.modalInfo.isHidden) {\n        targetClass = 'hidden';\n        document.body.style.overflow = '';\n    }\n    else {\n        document.body.style.overflow = 'hidden';\n    }\n\n    if (props.modalInfo.type === 'signup') {\n        return (\n            <div className={'bg-modal ' + targetClass} hidden={props.modalInfo.isHidden}>\n                <div className={'modal'}>\n                    <div className={'modal-wrapper'}>\n                        <div className={'modal-header'}>\n                            <div onClick={() => props.hideModal()} className=\"modal-checkbox-item\">X</div>\n                        </div>\n                        <SignUp setType={(type: string) => props.setModal(false, type, '')}\n                                hideModal={() => props.hideModal()} setAuth={props.setAuth}/>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n\n    if (props.modalInfo.type === 'login') {\n        return (\n            <div className={'bg-modal ' + targetClass} hidden={props.modalInfo.isHidden}>\n                <div className={'modal'}>\n                    <div className={'modal-wrapper'}>\n                        <div className={'modal-header'}>\n                            <div onClick={() => props.hideModal()} className=\"modal-checkbox-item\">X</div>\n                        </div>\n                        <Login setType={(type: string) => props.setModal(false, type, '')}\n                               hideModal={() => props.hideModal()}\n                               setAuth={props.setAuth}/>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n\n    if (props.modalInfo.type === \"addBook\") {\n        return (\n            <div className={'bg-modal ' + targetClass} hidden={props.modalInfo.isHidden}>\n                <div className={'modal'}>\n                    <div className={'modal-wrapper'}>\n                        <div className={'modal-header'}>\n                            <div onClick={() => props.hideModal()} className=\"modal-checkbox-item\">X</div>\n                        </div>\n                        <ModalAddBook hide={() => props.hideModal()} sections={props.modalInfo.payload}/>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n\n    if (props.modalInfo.type === \"Card\") {\n        return (\n            <div className={'bg-modal ' + targetClass} hidden={props.modalInfo.isHidden}>\n                <div className={'modal'}>\n                    <div className={'modal-wrapper'}>\n                        <div className={'modal-header'}>\n                            <div onClick={() => props.hideModal()} className=\"modal-checkbox-item\">X</div>\n                        </div>\n                        <ModalCard hide={() => props.hideModal()}\n                                   book={props.modalInfo.payload}\n                                   setModal={(isHidden: boolean, type: string, payload: any) => props.setModal(isHidden, type, payload)}\n                        />\n                    </div>\n                </div>\n\n            </div>\n        )\n            ;\n    }\n\n    if (props.modalInfo.type === \"editBook\") {\n        return (\n            <div className={'bg-modal ' + targetClass} hidden={props.modalInfo.isHidden}>\n                <div className={'modal'}>\n                    <div className={'modal-wrapper'}>\n                        <div className={'modal-header'}>\n                            <div onClick={() => props.hideModal()} className=\"modal-checkbox-item\">X</div>\n                        </div>\n                            <ModalEditBook hide={() => props.hideModal()} book={props.modalInfo.payload}\n                                           sections={props.modalInfo.payload.sections}/>\n                    </div>\n                </div>\n\n            </div>\n        );\n    }\n\n    return (<div></div>);\n}\n\nexport default Modal;\n","import React from 'react';\nimport DOMAIN from \"../../../DOMAIN\";\n\n\ninterface SidebarItem {\n    section: string,\n    first?: boolean,\n    setBooks: { (): void },\n    id: string,\n    setSection: { (value: string): void },\n    PagToBegin: { (): void }\n}\n\nfunction getBooks(section: string, setBooks: any) {\n    const data = {\n        section: section\n    };\n\n    fetch(DOMAIN + '/api/getBooksFromSections', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        if (!response.ok) {\n            alert('problems with server');\n        } else {\n            return response.json();\n        }\n    }).then(result => {\n        setBooks(result.data)\n    });\n}\n\nfunction setSection(value: string, setSection: { (value: string): void }) {\n    setSection('#' + value);\n}\n\nfunction SidebarItem(props: SidebarItem) {\n\n    if (props.first == true) {\n        return (\n            <div className=\"sidebar-item sidebar-first\" id={props.id}\n                 onClick={() => {\n                     getBooks(props.section, props.setBooks);\n                     setSection(props.id, props.setSection);\n                     props.PagToBegin();\n                 }}>{props.section}</div>\n        )\n    } else {\n        return (\n            <div className=\"sidebar-item\" id={props.id}\n                 onClick={() => {\n                     getBooks(props.section, props.setBooks);\n                     setSection(props.id, props.setSection);\n                     props.PagToBegin();\n                 }}>{props.section}</div>\n        )\n    }\n}\n\nexport default SidebarItem;\n","import React, {useState} from 'react';\n\ninterface AddBook {\n    isAuth: boolean,\n    setModal: { (isHidden: boolean, type: string, payload: string): void }\n    sections: string\n}\n\nfunction AddBook(props: AddBook) {\n    const [isHidden, setIsHidden] = useState(false);\n    if (!props.isAuth || isHidden) {\n        return (\n            <div id={'add-book'} className=\"hide\">\n            </div>\n        );\n    } else {\n        return (\n            <div id={'add-book'} className={'sidebar-item'} onClick={() => {\n                props.setModal(false, 'addBook', props.sections);\n            }}>\n                Add Book\n            </div>\n        )\n    }\n\n}\n\nexport default AddBook;\n","import React from 'react';\nimport DOMAIN from \"../../../DOMAIN\";\n\ninterface AllSection {\n    setBooks: { (): void }\n    setSection: { (value: string): void },\n    PagToBegin: { (): void }\n}\n\nfunction getBooks(setBooks: any) {\n\n    fetch(DOMAIN + '/api/getAllBooks', {\n        method: 'GET',\n        mode: 'cors',\n        headers: {\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n    }).then(response => {\n        if (!response.ok) {\n            alert('problems with server');\n        } else {\n            return response.json();\n        }\n    }).then(result => {\n        if (result !== undefined) {\n            setBooks(result.data);\n        }\n    });\n}\n\nfunction AllSection(props: AllSection) {\n\n    return (\n        <div id={'all-section-client'}\n             className=\"sidebar-item\" onClick={() => {\n            getBooks(props.setBooks);\n            props.PagToBegin()\n            props.setSection('#all-section-client');\n        }}>All books</div>\n    )\n}\n\nexport default AllSection;\n","import React, {useState} from 'react';\nimport DOMAIN from \"../../../DOMAIN\";\n\ninterface FindSection {\n    setBooks: { (): void }\n    setSection: { (value: string): void },\n    PagToBegin: { (): void }\n}\n\nfunction findBooks(query: string, type: string, setBooks: any) {\n    const data = {\n        query: query,\n        type: type\n    };\n\n    fetch(DOMAIN + '/api/findBooks/', {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n            'Content-type': 'application/json',\n            'X-Requested-With': 'XMLHttpRequest',\n        },\n        body: JSON.stringify(data)\n    }).then(response => {\n        return response.json();\n    }).then(result => {\n        if (result !== undefined) {\n            if (result.error !== undefined) {\n                alert('nothing founded');\n            } else {\n                setBooks(result.data);\n\n            }\n        }\n    });\n}\n\nfunction FindSection(props: FindSection) {\n    const [findInfo, setFindInfo] = useState('');\n    const [author, setAuthor] = useState(false);\n    const [name, setName] = useState(true);\n    return (\n        <div className={'find-books-container'}>\n            <input id={'find-section-client'} className={'find-books'} placeholder={'Find books...'}\n                   onChange={(event) => {\n                       setFindInfo(event.target.value);\n                   }}/>\n            <div className={'find-books-types-container'}>\n                <div>\n                    <input type=\"radio\" name=\"find-book-author\" value={'author'} checked={author} onChange={() => {\n                        setAuthor(true);\n                        setName(false);\n                    }}/>Author\n                </div>\n                <div>\n                    <input type=\"radio\" name=\"find-book-name\" value={'name'} checked={name} onChange={() => {\n                        setName(true);\n                        setAuthor(false);\n                    }}/>Book Name\n                </div>\n            </div>\n            <div className={'find-book-button-wrapper'}>\n                <div className={'find-book-button'} onClick={() => {\n                    let type: string;\n                    if (author) {\n                        type = 'book_author';\n                    } else {\n                        type = 'book_name';\n                    }\n                    findBooks(findInfo, type, props.setBooks);\n                    props.PagToBegin()\n                    props.setSection('#all-section-client');\n                }}>\n                    Submit\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default FindSection;\n","import React, {useEffect, useState} from \"react\";\nimport DOMAIN from \"../../../DOMAIN\";\nimport SidebarItem from \"./SidebarItem\";\nimport AddBook from \"../AddBook/AddBook\";\nimport AllSection from \"./AllSection\";\nimport FindSection from \"./FindSection\";\n\nfunction Sections(props: any) {\n    const [sections, setSections] = useState();\n    const [client_id, setClientId] = useState();\n    const [counter, setCounter] = useState(0);\n    useEffect(() => {\n        fetch(DOMAIN + '/api/getSections', {\n            method: 'GET',\n            mode: 'cors',\n            headers: {\n                'Content-type': 'application/json',\n                'X-Requested-With': 'XMLHttpRequest',\n            },\n        }).then((response) => {\n            return response.json();\n        }).then((result) => {\n            let sections: string[] = [];\n            const client_id: string[] = [];\n            for (let i = 0; i < result.data.length; i++) {\n                const key = `f${(~~(Math.random() * 1e8)).toString(16)}`;\n                sections[i] = result.data[i].section_name;\n                client_id[i] = key;\n            }\n            setSections(sections);\n            props.setSectionsList(sections);\n            setClientId(client_id);\n            // @ts-ignore\n            document.querySelector(\"#all-section-client\").click()\n        })\n    }, []);\n    if (sections == undefined || client_id == undefined) {\n        return (\n            <div id={'sidebar'}>\n                <div className={'section-loading-wrapper'}>\n                    <div className=\"section-loading\">Loading</div>\n                </div>\n            </div>\n        );\n    } else {\n        const sidebarItems = sections.map((item: string, index: number) => {\n            if (index == 0) return (\n                <SidebarItem setSection={props.setSection} id={client_id[index]} setBooks={props.setBooks}\n                             PagToBegin={props.PagToBegin}\n                             section={item}\n                             key={client_id[index]}\n                             first={true}/>);\n            else return (\n                <SidebarItem setSection={props.setSection} id={client_id[index]} setBooks={props.setBooks}\n                             PagToBegin={props.PagToBegin}\n                             section={item}\n                             key={client_id[index]}/>);\n        });\n        const currentSection = [];\n        let isEnd = false;\n        let booksLen: number = sections.length;\n        let hide1: string = '';\n        let hide2: string = '';\n        for (let i = 0; i < 5; i++) {\n            let index = i + 5 * counter;\n            if (index >= booksLen) {\n                isEnd = true;\n                break;\n            }\n            currentSection[i] = sidebarItems[index];\n            if (counter == 0) {\n                hide1 = 'hide';\n            }\n\n            if (isEnd) {\n                hide2 = 'hide';\n            }\n        }\n        return (\n            <div id={'sidebar'}>\n                <div className={'sidebar-wrapper'}>\n                    {currentSection}\n                    <AllSection setSection={props.setSection}\n                                PagToBegin={props.PagToBegin}\n                                setBooks={props.setBooks}/>\n                    <AddBook isAuth={props.isAuth}\n                             sections={sections}\n                             setModal={(isHidden: boolean, type: string, payload: string) => props.setModal(isHidden, type, payload)}/>\n                </div>\n\n                <div className={'section-pagination'}>\n                    <div onClick={() => setCounter(counter - 1)} className={'section-pagination-counter ' + hide1}>-\n                    </div>\n                    <div onClick={() => setCounter(counter + 1)} className={'section-pagination-counter ' + hide2}>+\n                    </div>\n                </div>\n                <FindSection setSection={props.setSection}\n                             PagToBegin={props.PagToBegin}\n                             setBooks={props.setBooks}\n                />\n            </div>\n        );\n\n    }\n}\n\nexport default Sections;\n","import React from \"react\";\nimport DOMAIN from \"../../../DOMAIN\";\n\ninterface MiniCard {\n    book: any\n    setModal: { (isHidden: boolean, type: string, payload: string): void },\n    isAuth: boolean,\n    targetSection: string,\n}\n\n\nfunction MiniCard(props: MiniCard) {\n    let data = props.book;\n    data.isAuth = props.isAuth;\n    data.targetSection = props.targetSection;\n    return (\n        <div className=\"mini-card\"\n             id={data.client_id}\n             onClick={() => {\n                 props.setModal(false, 'Card', data)\n             }}\n        >\n            <div className=\"mini-card-img-wrapper\">\n                <img src={DOMAIN + props.book.book_cover} alt=\"\"/>\n            </div>\n            <div className=\"mini-card-book-name-wrapper\">\n                <h5>Name: {props.book.book_name}</h5>\n            </div>\n            <div className=\"mini-card-book-author-wrapper\">\n                <h5>Author: {props.book.book_author}</h5>\n            </div>\n        </div>\n    )\n}\n\nexport default MiniCard;\n","import React, {useEffect, useState} from \"react\";\nimport MiniCard from \"./MiniCard\";\n\nfunction WorkSpace(props: any) {\n    const [hidePag, setHidePag] = useState('hide');\n    let books = props.books.map((book: any, index: number) => {\n        const keyIndex = index + 1;\n        const client_id = 'book' + keyIndex;\n        let data = book;\n        data.sections = props.sections;\n        data.client_id = client_id;\n        return <MiniCard targetSection={props.targetSection} key={index + 1}\n                         setModal={props.setModal}\n                         isAuth={props.isAuth} book={data}/>\n    })\n\n    useEffect(() => {\n        if (booksLen != 0) {\n            setHidePag('');\n        }\n    },)\n\n    let currentBooks = [];\n    let isEnd = false;\n    let booksLen: number = books.length;\n    let hide1: string = '';\n    let hide2: string = '';\n    if (booksLen != 0) {\n        for (let i = 0; i < 8; i++) {\n            let index = i + 8 * props.count.counter;\n            if (index >= booksLen) {\n                isEnd = true;\n                break;\n            }\n            currentBooks[i] = books[index];\n        }\n        if (props.count.counter == 0) {\n            hide1 = 'hide';\n        }\n\n        if (isEnd) {\n            hide2 = 'hide';\n        }\n    }\n\n    return (\n        <div id={'workspace'}>\n            <div id={'workspace-container'}>\n                {currentBooks}\n            </div>\n            <div className={\"pagination \" + hidePag}>\n                <p onClick={() => props.count.setCounter(props.count.counter - 1)} className={hide1}>BACK</p>\n                <p onClick={() => props.count.setCounter(props.count.counter + 1)} className={hide2}>FORWARD</p>\n            </div>\n        </div>\n    )\n}\n\nexport default WorkSpace;\n","import React, {useState} from \"react\";\nimport Sections from './Sections/Sections';\nimport WorkSpace from \"./WorkSpace/WorkSpace\";\nimport './style.css';\n\ninterface Dashboard {\n    isAuth: boolean,\n    setModal: { (isHidden: boolean, type: string, payload: string): void }\n}\n\nfunction Dashboard(props: Dashboard) {\n    const [books, setBooks] = useState([]);\n    const [section, setSection] = useState('all-section-client');\n    const [sectionsList, setSectionsList] = useState('all-section-client');\n    const [counter, setCounter] = useState(0);\n    return (\n        <div id={'dashboard'}>\n            <Sections isAuth={props.isAuth}\n                      PagToBegin = {() => setCounter(0)}\n                      setBooks={setBooks}\n                      setSection={setSection}\n                      setSectionsList={setSectionsList}\n                      setModal={(isHidden: boolean, type: string, payload: string) => props.setModal(isHidden, type, payload)}/>\n            <WorkSpace books={books}\n                       targetSection={section}\n                       sections = {sectionsList}\n                       count={{\n                           setCounter: setCounter,\n                           counter: counter\n                       }}\n                       isAuth={props.isAuth}\n                       setModal={(isHidden: boolean, type: string, payload: string) => props.setModal(isHidden, type, payload)}/>\n        </div>\n    );\n}\n\nexport default Dashboard;\n","import React, {useEffect, useState} from 'react';\nimport './AppStyle.css'\nimport Header from \"./Header/Header\";\nimport Modal from \"./Modal\";\nimport Dashboard from \"./Dashboard/Dashboard\";\nimport 'semantic-ui-css/semantic.min.css'\n\nfunction App() {\n    const [modal, setModal] = useState({\n        isHidden: true,\n        type: '',\n        payload: ''\n    });\n    const [auth, setAuth] = useState({\n        name: '',\n        isAuth: false,\n    });\n    const [isAdmin, setIsAdmin] = useState(false);\n\n    useEffect(() => {\n        if (sessionStorage.getItem('token') != null || sessionStorage.getItem('name')) {\n            let name = sessionStorage.getItem('name');\n            if (name == null) {\n                name = ''\n            }\n            setAuth({\n                name: name,\n                isAuth: true,\n            })\n            setIsAdmin(false);\n        }\n        // @ts-ignore\n    }, [])\n\n    return (\n        <div>\n            <Header setModal={() => setModal({\n                isHidden: false,\n                type: 'login',\n                payload: ''\n            })} auth={auth} setAuth={setAuth} setAdmin={setIsAdmin}/>\n            <Modal\n                hideModal={() => setModal({\n                    isHidden: true,\n                    type: '',\n                    payload: ''\n                })}\n                setModal={(isHiddenValue: boolean, typeValue: string, payloadValue: any) => setModal({\n                    isHidden: isHiddenValue,\n                    type: typeValue,\n                    payload: payloadValue\n                })}\n                setAuth={setAuth} modalInfo={modal}/>\n            <Dashboard isAuth={auth.isAuth} setModal={(isHidden: boolean, type: string, payload: any) => setModal({\n                isHidden: isHidden,\n                type: type,\n                payload: payload\n            })}/>\n        </div>\n    );\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}